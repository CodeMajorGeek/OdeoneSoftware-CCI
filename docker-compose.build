services:
  traefik:
    image: traefik
    container_name: "traefik"
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml
    networks:
      - web
  react_front:
    image: odeone_front
    container_name: "odeone_front"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.react_front.rule=PathPrefix(`/`)"
      - "traefik.http.services.react_front.loadbalancer.server.port=3000"
    depends_on:
      - express_back
    networks:
      - web
  express_back:
    image: odeone_back
    container_name: "odeone_back"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.express_back.rule=PathPrefix(`/api/`)"
      - "traefik.http.services.express_back.loadbalancer.server.port=9999"
    depends_on:
      - db
    networks:
      - web
  db:
    image: postgres
    container_name: "db"
    restart: always
    shm_size: 128mb
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
    networks:
      - web
networks:
  web:
    driver: bridge