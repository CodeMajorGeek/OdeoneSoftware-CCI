services:
  traefik:
    image: traefik
    container_name: "traefik"
    command:
      - "--configFile=/etc/traefik/traefik.yml"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml
    networks:
      - web
  react_front:
    build:
      context: ./react-front
      dockerfile: Dockerfile
    container_name: "react_front"
    volumes:
      - ./react-front:/usr/app/react-front/.
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.react_front.entrypoints=web"
      - "traefik.http.routers.react_front.rule=PathPrefix(`/`)"
      - "traefik.http.services.react_front.loadbalancer.server.port=3000"
      - "traefik.docker.network=web"
    depends_on:
      - express_back
    networks:
      - web
  express_back:
    build:
      context: ./express-back
      dockerfile: Dockerfile
    container_name: "express_back"
    volumes:
      - ./express-back:/usr/app/express-back/.
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.express_back.entrypoints=web"
      - "traefik.http.routers.express_back.rule=PathPrefix(`/api/`)"
      - "traefik.http.services.express_back.loadbalancer.server.port=9999"
      - "traefik.docker.network=web"
    depends_on:
      - db
    networks:
      - web
  db:
    image: postgres
    container_name: "db"
    restart: always
    shm_size: 128mb
    volumes:
      - /var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
    networks:
      - web
  adminer:
    image: adminer
    container_name: "adminer"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.entrypoints=web"
      - "traefik.http.routers.adminer.rule=PathPrefix(`/adminer/`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - "traefik.docker.network=web"
    depends_on:
      - db
    networks:
      - web
networks:
  web:
    driver: bridge